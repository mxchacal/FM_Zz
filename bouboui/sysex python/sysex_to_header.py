import pastel
import sys
import codecs
from time import sleep

block_size = 1

print(pastel.colorize('<fg=blue;option=bold>    <----------------->   '))
print(pastel.colorize('<fg=blue;option=bold>  <---------------------> '))
print(pastel.colorize('<fg=blue;option=bold> <----------------------->'))
print(pastel.colorize('<fg=blue;option=bold><----> '), pastel.colorize('<fg=white;option=bold>FM_Z /// DX7'),pastel.colorize('<fg=blue;option=bold> <--->'))
print(pastel.colorize('<fg=blue;option=bold> <--->'), pastel.colorize('<fg=white;option=bold> SYSEX DECODER'), pastel.colorize('<fg=blue;option=bold> <-->'))
print(pastel.colorize('<fg=blue;option=bold>  <---------------------> '))
print(pastel.colorize('<fg=blue;option=bold>    <----------------->   '))

print(' ')
filename = input(pastel.colorize('<fg=white;options=bold>Sysex file : '))

print(pastel.colorize('<fg=white;options=bold>Opening : '), filename)
sysex = open(filename, "rb")

print(pastel.colorize('<fg=white;options=bold>Creating : '), 'cartridges.h')
header_file = open('../../src/cartridge.h', "w")

#Find if it is 1 or 32 voice dump
sysex.seek(3)
block = sysex.read(block_size)
print(pastel.colorize('<fg=yellow;options=bold>Format number byte : '), int.from_bytes(block, byteorder='big'))

str(int.from_bytes(block, byteorder='big'))
if str(int.from_bytes(block, byteorder='big')) == '9':
	print(pastel.colorize('<fg=yellow;options=bold>32 Voices Dump Sysex'))
	format = '32 voices'
elif str(int.from_bytes(block, byteorder='big')) == '0':
	print(pastel.colorize('<fg=yellow;options=bold>1 Voice Dump Sysex'))
	format = '1 voice'

#Write header
header_file.write("/*\n	cartridge.h automatically generated by python script\n	Contain " + format + "\n	Use #include cartridge.h in your teensy sketch\n*/\n#ifndef Cartridge_h\n#define Cartridge_h\n")

if format == '32 voices':
	print(pastel.colorize('<fg=blue;options=bold>Beginning full conversion :'))
	header_file.write("\nunsigned char sysex[4104] = { ")

	sysex.seek(6)
	block = str(int.from_bytes(sysex.read(block_size), byteorder='big'))
	header_file.write(block)
	count = 7

	while block != '247':
		count = count + 1
		block = str(int.from_bytes(sysex.read(block_size), byteorder='big'))
		header_file.write(", " + block)
		if count % 10 == 0:
			header_file.write("\n")

	name = ["" for x in range(32)]
	index = 124
	for j in range(0, 31):
		sysex.seek(index)
		for i in range(0, 10):
			name[j] = name[j] + str(chr(int.from_bytes(sysex.read(block_size), byteorder='big')))

		index = index + 128
		print("--" + name[j] + "-- "+ pastel.colorize("<fg=green;options=bold>copied"))
		sleep(0.2)

	header_file.write("};\n\n#endif")
	print(pastel.colorize('<fg=blue;options=bold>full conversion done!'))
	print(pastel.colorize('<fg=blue;options=bold>cartridge.h created in src/'))

elif format == '1 voice':
	print('Beginning full conversion : ')
